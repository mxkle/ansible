import XMonad
import XMonad.Hooks.DynamicLog
import XMonad.Util.Run(spawnPipe)
import XMonad.Util.EZConfig(additionalKeys)
import System.IO
import qualified XMonad.StackSet as W
import XMonad.Hooks.ManageHelpers

main = do
    xmonad $ def
        { layoutHook = layoutHook defaultConfig
        , manageHook = fmap not isDialog --> doF avoidMaster
        , modMask = mod4Mask
        , terminal = "urxvt"
        } `additionalKeys`
        [ ((mod4Mask .|. shiftMask, xK_Return), spawn "urxvt")
        , ((mod4Mask .|. shiftMask, xK_q), kill)
        , ((mod4Mask, xK_space), spawn "rofi -show run -lines 3 -modi 'run,ssh' -font 'Source Code Pro 12' -separator-style none -hide-scrollbar -matching fuzzy -columns 2 -width 20 -location 6 -padding 2")
        ]

avoidMaster :: W.StackSet i l a s sd -> W.StackSet i l a s sd
avoidMaster = W.modify' $ \c -> case c of
     W.Stack t [] (r:rs) ->  W.Stack t [r] rs
     otherwise           -> c
